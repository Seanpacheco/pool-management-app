// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { siteSiteId, type SiteSiteId } from './Site';
import { z } from 'zod';

/** Identifier type for public.installation */
export type InstallationInstallationId = string & { __brand: 'InstallationInstallationId' };

/** Represents the table public.installation */
export default interface Installation {
  installation_id: InstallationInstallationId;

  site_id: SiteSiteId;

  name: string | null;

  type: string | null;

  shape: string | null;

  length: number | null;

  width: number | null;

  depth: number | null;

  gallons: number | null;

  created_at: Date;

  updated_at: Date;
}

/** Represents the initializer for the table public.installation */
export interface InstallationInitializer {
  /** Default value: gen_random_uuid() */
  installation_id?: InstallationInstallationId;

  site_id: SiteSiteId;

  name?: string | null;

  type?: string | null;

  shape?: string | null;

  length?: number | null;

  width?: number | null;

  depth?: number | null;

  gallons?: number | null;

  /** Default value: CURRENT_TIMESTAMP */
  created_at?: Date;

  /** Default value: CURRENT_TIMESTAMP */
  updated_at?: Date;
}

/** Represents the mutator for the table public.installation */
export interface InstallationMutator {
  installation_id?: InstallationInstallationId;

  site_id?: SiteSiteId;

  name?: string | null;

  type?: string | null;

  shape?: string | null;

  length?: number | null;

  width?: number | null;

  depth?: number | null;

  gallons?: number | null;

  created_at?: Date;

  updated_at?: Date;
}

export const installationInstallationId = z.string() as unknown as z.Schema<InstallationInstallationId>;

export const installation = z.object({
  installation_id: installationInstallationId,
  site_id: siteSiteId,
  name: z.string().nullable(),
  type: z.string().nullable(),
  shape: z.string().nullable(),
  length: z.number().nullable(),
  width: z.number().nullable(),
  depth: z.number().nullable(),
  gallons: z.number().nullable(),
  created_at: z.date(),
  updated_at: z.date(),
}) as unknown as z.Schema<Installation>;

export const installationInitializer = z.object({
  installation_id: installationInstallationId.optional(),
  site_id: siteSiteId,
  name: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  shape: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  depth: z.number().optional().nullable(),
  gallons: z.number().optional().nullable(),
  created_at: z.date().optional(),
  updated_at: z.date().optional(),
}) as unknown as z.Schema<InstallationInitializer>;

export const installationMutator = z.object({
  installation_id: installationInstallationId.optional(),
  site_id: siteSiteId.optional(),
  name: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
  shape: z.string().optional().nullable(),
  length: z.number().optional().nullable(),
  width: z.number().optional().nullable(),
  depth: z.number().optional().nullable(),
  gallons: z.number().optional().nullable(),
  created_at: z.date().optional(),
  updated_at: z.date().optional(),
}) as unknown as z.Schema<InstallationMutator>;
